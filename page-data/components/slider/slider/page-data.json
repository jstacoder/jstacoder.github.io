{"componentChunkName":"component---src-components-mdx-layout-js","path":"/components/slider/slider/","result":{"data":{"mdx":{"id":"d214aaf9-6ab9-5458-9554-59d24e8b48fd","frontmatter":{"title":"Slider component","commentApiId":10},"timeToRead":1,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Slider component\",\n  \"menu\": \"Components\",\n  \"draft\": false,\n  \"commentApiId\": 10\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"slider-component\"\n  }, \"Slider Component\"), mdx(\"h2\", {\n    \"id\": \"props\"\n  }, \"Props\"), mdx(Props, {\n    of: Slider,\n    mdxType: \"Props\"\n  }), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, \"Usage\"), mdx(\"h3\", {\n    \"id\": \"default-values\"\n  }, \"Default values\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"<Slider defaultValue={50} />\\n\")), mdx(\"h3\", {\n    \"id\": \"clickable-icons\"\n  }, \"Clickable icons\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"<Slider defaultValue={10}  addIcons/>\\n\")), mdx(\"h3\", {\n    \"id\": \"vertical\"\n  }, \"Vertical\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"<Slider defaultValue={50} vertical/>\\n\")), mdx(\"h3\", {\n    \"id\": \"controlled-component\"\n  }, \"Controlled Component\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }), \"()=>{\\n    const [val, setVal] = React.useState(50)\\n\\n    return (\\n        <BorderBox p={3} m={2}>\\n           <BorderBox p={2} m={2} style={{textAlign:'center'}} width={'100px'} mx={'auto'} color='black'> {val}</BorderBox>\\n            <Slider value={val} onChange={setVal}/>\\n        </BorderBox>\\n    )\\n}\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\"\n  }, \"Examples\"), mdx(\"h3\", {\n    \"id\": \"vertical-example\"\n  }, \"Vertical Example\"), mdx(VerticalExample, {\n    mdxType: \"VerticalExample\"\n  }), mdx(\"h3\", {\n    \"id\": \"startslide-and-endslide-props\"\n  }, \"startSlide and endSlide props\"), mdx(SliderWithStartAndEndHandler, {\n    mdxType: \"SliderWithStartAndEndHandler\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"d214aaf9-6ab9-5458-9554-59d24e8b48fd"}}}