{"componentChunkName":"component---src-components-mdx-layout-js","path":"/blog/2019-09-30-docz-layout-in-frontmatter/","result":{"data":{"mdx":{"id":"92a1932a-56ef-55de-85c9-2f366b16787b","frontmatter":{"title":"docz layout in frontmatter","commentApiId":8},"timeToRead":1,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"docz layout in frontmatter\",\n  \"layout\": \"default\",\n  \"draft\": true,\n  \"commentApiId\": 8\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overriding-mdx-layout-in-frontmatter\"\n  }, \"Overriding MDX layout in frontmatter\"), mdx(\"p\", null, \"I really like using docz, and since they have integrated with Gatbsy\\nand Theme-UI i like it even more.\"), mdx(\"p\", null, \"One thing i like is how you can completley override the way it\\ndoes things, or you can just shadow individual components, to only override\\nwhat you want.\"), mdx(\"p\", null, \"But one thing i dont like is that by default when you override the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Layout\"), \" component\\nit takes over every docz page,\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"But what if i only want to overide the layout on certain pages?\")), mdx(\"p\", null, \"Heres how to do it:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"92a1932a-56ef-55de-85c9-2f366b16787b"}}}