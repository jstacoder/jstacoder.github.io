{"componentChunkName":"component---src-components-mdx-layout-js","path":"/blog/posts/2019-06-09-graphql-and-gatsby/","result":{"data":{"mdx":{"id":"c63e5f93-3fd1-5e8f-8e98-0c0012284792","frontmatter":{"title":"Using Graphql in Gatsbyjs","commentApiId":null},"timeToRead":1,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Using Graphql in Gatsbyjs\",\n  \"published\": true,\n  \"path\": \"/first\",\n  \"layout\": \"stacked\",\n  \"category\": \"pppp\",\n  \"tags\": [\" gatsbyjs\", \"react\", \"graphql\"],\n  \"description\": \"ffwef\",\n  \"date\": \"2019-05-05\",\n  \"draft\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"graphql-why\"\n  }, \"Graphql why?\"), mdx(\"h3\", {\n    \"id\": \"you-may-have-heard-about-gatsby-and-that-it-uses-graphql\"\n  }, \"You may have heard about Gatsby and that it uses graphql\"), mdx(\"p\", null, \"This may cause you to ask:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Why GraphQL? Do i really need to learn this to make use of Gatsby?\")), mdx(\"p\", null, \"So to answer your question:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Because GraphQL is BaddASS and yes you need to learn it\")), mdx(\"p\", null, \"but don't worry, it's not that hard.\"), mdx(\"p\", null, \"Lets look at what it means to query things in graphql:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"first we will go over graphql query syntax and schema definitions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"then well look at what data we would query for in Gatsby and why\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and we will tie it all together by showing how to get the data in Gatsby using graphql queries\")), mdx(\"h3\", {\n    \"id\": \"what-is-a-graphql-query\"\n  }, \"What is a graphql query?\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"c63e5f93-3fd1-5e8f-8e98-0c0012284792"}}}