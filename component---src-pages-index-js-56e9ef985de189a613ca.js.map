{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Footer/index.js","webpack:///./gatsby-config.js","webpack:///./src/components/Meta/index.js","webpack:///./src/components/Navi/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Adsense/index.js","webpack:///./src/templates/Post/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_get__WEBPACK_IMPORTED_MODULE_1__","lodash_get__WEBPACK_IMPORTED_MODULE_1___default","templates_Post__WEBPACK_IMPORTED_MODULE_2__","components_Meta__WEBPACK_IMPORTED_MODULE_3__","components_Layout__WEBPACK_IMPORTED_MODULE_4__","BlogIndex","_ref","data","location","posts","get","a","createElement","site","map","_ref2","i","post","options","isIndex","key","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Footer","author","title","className","to","module","exports","siteMetadata","description","siteUrl","twitter","adsense","pathPrefix","plugins","resolve","path","__dirname","name","maxWidth","linkImagesToOriginal","wrapperStyle","short_name","homepage_url","start_url","background_color","theme_color","display","icons","src","sizes","type","trackingId","mergeSecurityHeaders","mergeLinkHeaders","mergeCachingHeaders","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","lodash_get__WEBPACK_IMPORTED_MODULE_2__","lodash_get__WEBPACK_IMPORTED_MODULE_2___default","Meta","siteTitle","meta","content","property","Navi","render","_this$props","this","props","react_default","gatsby_browser_entry","pathname","React","Component","Layout","componentDidMount","emergence","init","componentDidUpdate","children","components_Navi","Object","assign","Adsense","clientId","window","adsbygoogle","push","slotId","format","style","data-ad-client","data-ad-slot","data-ad-format","getAd","Post","_data$frontmatter","frontmatter","category","tags","date","image","html","isMore","match","fixed","boxShadow","dateTime","Badges","items","primary","gatsby_image_default","margin","dangerouslySetInnerHTML","__html","getDescription","Button","label","components_Adsense","body","replace","split","_ref3","item"],"mappings":"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","file":"component---src-pages-index-js-56e9ef985de189a613ca.js","sourcesContent":["import { graphql } from 'gatsby'\r\nimport React from 'react'\r\nimport get from 'lodash/get'\r\n\r\nimport Post from 'templates/Post'\r\nimport Meta from 'components/Meta'\r\nimport Layout from 'components/Layout'\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const posts = get(data, 'remark.posts')\r\n  return (\r\n    <Layout location={location}>\r\n      <Meta site={get(data, 'site.meta')} />\r\n      {posts.map(({ post }, i) => (\r\n        <Post\r\n          data={post}\r\n          options={{\r\n            isIndex: true,\r\n          }}\r\n          key={i}\r\n        />\r\n      ))}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    site {\r\n      meta: siteMetadata {\r\n        title\r\n        description\r\n        url: siteUrl\r\n        author\r\n        twitter\r\n        adsense\r\n      }\r\n    }\r\n    remark: allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      posts: edges {\r\n        post: node {\r\n          html\r\n          frontmatter {\r\n            layout\r\n            title\r\n            path\r\n            category\r\n            tags\r\n            description\r\n            date(formatString: \"YYYY/MM/DD\")\r\n            image {\r\n              childImageSharp {\r\n                fixed(width: 500) {\r\n                  ...GatsbyImageSharpFixed_withWebp\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { Link } from 'gatsby'\r\nimport React from 'react'\r\nimport './style.scss'\r\n\r\nconst Footer = ({ author, title }) => (\r\n  <div className=\"footer\">\r\n    <div className=\"container\">\r\n      <hr className=\"border-primary\" />\r\n      <p>\r\n        {title}\r\n        <Link to=\"/profile/\">\r\n          <br />\r\n          <strong>{author}</strong> on Profile\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Footer\r\n","module.exports = {\r\n  siteMetadata: {\r\n    title: 'Gatstrap',\r\n    description: 'Gatsby starter for bootstrap a blog',\r\n    siteUrl: 'https://gatstrap.netlify.com',\r\n    author: 'jaxx2104',\r\n    twitter: 'jaxx2104',\r\n    adsense: '',\r\n  },\r\n  pathPrefix: '/',\r\n  plugins: [\r\n    {\r\n      resolve: 'gatsby-source-filesystem',\r\n      options: {\r\n        path: `${__dirname}/content/posts/`,\r\n        name: 'posts',\r\n      },\r\n    },\r\n    {\r\n      resolve: 'gatsby-source-filesystem',\r\n      options: {\r\n        path: `${__dirname}/content/images/`,\r\n        name: 'images',\r\n      },\r\n    },\r\n    {\r\n      resolve: 'gatsby-transformer-remark',\r\n      options: {\r\n        plugins: [\r\n          {\r\n            resolve: 'gatsby-remark-images',\r\n            options: {\r\n              maxWidth: 750,\r\n              linkImagesToOriginal: false,\r\n              wrapperStyle: 'margin-bottom: 1.0725rem;',\r\n            },\r\n          },\r\n          {\r\n            resolve: 'gatsby-remark-responsive-iframe',\r\n            options: {\r\n              wrapperStyle: 'margin-bottom: 1.0725rem',\r\n            },\r\n          },\r\n          'gatsby-remark-prismjs',\r\n          'gatsby-remark-copy-linked-files',\r\n          'gatsby-remark-smartypants',\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      resolve: `gatsby-plugin-manifest`,\r\n      options: {\r\n        name: 'Gatstrap',\r\n        short_name: 'Gatstrap',\r\n        description: 'Gatsby starter for bootstrap a blog',\r\n        homepage_url: 'https://gatstrap.netlify.com',\r\n        start_url: '/',\r\n        background_color: '#fff',\r\n        theme_color: '#673ab7',\r\n        display: 'standalone',\r\n        icons: [\r\n          {\r\n            src: '/img/android-chrome-192x192.png',\r\n            sizes: '192x192',\r\n            type: 'image/png',\r\n          },\r\n          {\r\n            src: '/img/android-chrome-512x512.png',\r\n            sizes: '512x512',\r\n            type: 'image/png',\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      resolve: 'gatsby-plugin-google-analytics',\r\n      options: {\r\n        trackingId: '',\r\n      },\r\n    },\r\n    {\r\n      resolve: 'gatsby-plugin-netlify',\r\n      options: {\r\n        mergeSecurityHeaders: true,\r\n        mergeLinkHeaders: true,\r\n        mergeCachingHeaders: true,\r\n      },\r\n    },\r\n    'gatsby-plugin-catch-links',\r\n    'gatsby-plugin-offline',\r\n    'gatsby-plugin-react-helmet',\r\n    'gatsby-plugin-react-next',\r\n    'gatsby-plugin-sass',\r\n    'gatsby-plugin-sharp',\r\n    'gatsby-plugin-sitemap',\r\n    'gatsby-plugin-twitter',\r\n    'gatsby-transformer-sharp',\r\n  ],\r\n}\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport get from 'lodash/get'\r\n\r\nconst Meta = ({ site, title }) => {\r\n  const siteTitle = get(site, 'title')\r\n  title = title ? `${title} | ${siteTitle}` : siteTitle\r\n  return (\r\n    <Helmet\r\n      title={title}\r\n      meta={[\r\n        { name: 'twitter:card', content: 'summary' },\r\n        {\r\n          name: 'twitter:site',\r\n          content: `@${get(site, 'twitter')}`,\r\n        },\r\n        { property: 'og:title', content: title },\r\n        { property: 'og:type', content: 'website' },\r\n        {\r\n          property: 'og:description',\r\n          content: get(site, 'description'),\r\n        },\r\n        {\r\n          property: 'og:url',\r\n          content: `${get(site, 'siteUrl')}/profile`,\r\n        },\r\n        {\r\n          property: 'og:image',\r\n          content: `${get(site, 'siteUrl')}/img/profile.jpg`,\r\n        },\r\n      ]}\r\n    />\r\n  )\r\n}\r\nexport default Meta\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nclass Navi extends React.Component {\r\n  render() {\r\n    const { location, title } = this.props\r\n    return (\r\n      <nav className=\"navbar navbar-expand navbar-dark flex-column flex-md-row bg-primary\">\r\n        <div className=\"container\">\r\n          <Link className=\"text-center\" to=\"/\">\r\n            <h1 className=\"navbar-brand mb-0\">{title}</h1>\r\n          </Link>\r\n          <div className=\"navbar-nav-scroll\">\r\n            <ul className=\"navbar-nav bd-navbar-nav flex-row\">\r\n              <li\r\n                className={\r\n                  location.pathname === '/' ? 'nav-item active' : 'nav-item'\r\n                }\r\n              >\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={\r\n                  location.pathname === '/profile/'\r\n                    ? 'nav-item active'\r\n                    : 'nav-item'\r\n                }\r\n              >\r\n                <Link to=\"/profile/\" className=\"nav-link\">\r\n                  Profile\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\" />\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navi\r\n","import React from 'react'\r\nimport emergence from 'emergence.js'\r\n\r\nimport Navi from 'components/Navi'\r\nimport Footer from 'components/Footer'\r\nimport { siteMetadata } from '../../../gatsby-config'\r\n\r\nimport 'modern-normalize/modern-normalize.css'\r\nimport 'prismjs/themes/prism.css'\r\nimport 'scss/gatstrap.scss'\r\nimport 'animate.css/animate.css'\r\nimport 'font-awesome/css/font-awesome.css'\r\n\r\nclass Layout extends React.Component {\r\n  componentDidMount() {\r\n    emergence.init()\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    emergence.init()\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    return (\r\n      <div>\r\n        <Navi title={siteMetadata.title} {...this.props} />\r\n        {children}\r\n        <Footer title={siteMetadata.title} author={siteMetadata.author} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\n\r\nclass Adsense extends React.Component {\r\n  componentDidMount() {\r\n    const { clientId } = this.props\r\n    if (clientId) {\r\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { clientId, slotId, format } = this.props\r\n\r\n    return clientId ? (\r\n      <div className=\"ad\">\r\n        <ins\r\n          className=\"adsbygoogle\"\r\n          style={{ display: 'block' }}\r\n          data-ad-client={clientId}\r\n          data-ad-slot={slotId}\r\n          data-ad-format={format}\r\n        />\r\n      </div>\r\n    ) : (\r\n      ''\r\n    )\r\n  }\r\n}\r\nexport default Adsense\r\n","import { Link } from 'gatsby'\r\nimport get from 'lodash/get'\r\nimport React from 'react'\r\nimport map from 'lodash/map'\r\nimport Img from 'gatsby-image'\r\n\r\nimport Adsense from 'components/Adsense'\r\nimport Footer from 'components/Footer'\r\nimport './style.scss'\r\n\r\nconst Post = ({ data, options }) => {\r\n  const {\r\n    category,\r\n    tags,\r\n    description,\r\n    title,\r\n    path,\r\n    date,\r\n    image,\r\n  } = data.frontmatter\r\n  const { isIndex, adsense } = options\r\n  const html = get(data, 'html')\r\n  const isMore = isIndex && !!html.match('<!--more-->')\r\n  const fixed = get(image, 'childImageSharp.fixed')\r\n\r\n  return (\r\n    <div className=\"article\" key={path}>\r\n      <div className=\"container\">\r\n        <div className=\"info\">\r\n          <Link style={{ boxShadow: 'none' }} to={path}>\r\n            <h1>{title}</h1>\r\n            <time dateTime={date}>{date}</time>\r\n          </Link>\r\n          {Badges({ items: [category], primary: true })}\r\n          {Badges({ items: tags })}\r\n        </div>\r\n        <div className=\"content\">\r\n          <p>{description}</p>\r\n          {fixed ? (\r\n            <Img fixed={fixed} style={{ display: 'block', margin: '0 auto' }} />\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n        <div\r\n          className=\"content\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: isMore ? getDescription(html) : html,\r\n          }}\r\n        />\r\n        {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\r\n        {getAd(isIndex, adsense)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nconst getAd = (isIndex, adsense) => {\r\n  return !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\r\n}\r\n\r\nconst getDescription = body => {\r\n  body = body.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\r\n  if (body.match('<!--more-->')) {\r\n    body = body.split('<!--more-->')\r\n    if (typeof body[0] !== 'undefined') {\r\n      return body[0]\r\n    }\r\n  }\r\n  return body\r\n}\r\n\r\nconst Button = ({ path, label, primary }) => (\r\n  <Link className=\"readmore\" to={path}>\r\n    <span\r\n      className={`btn btn-outline-primary btn-block ${\r\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\r\n      }`}\r\n    >\r\n      {label}\r\n    </span>\r\n  </Link>\r\n)\r\n\r\nconst Badges = ({ items, primary }) =>\r\n  map(items, (item, i) => {\r\n    return (\r\n      <span\r\n        className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}\r\n        key={i}\r\n      >\r\n        {item}\r\n      </span>\r\n    )\r\n  })\r\n"],"sourceRoot":""}